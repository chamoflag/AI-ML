# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RponynEgyXmrH7Wor56h7tBgqwoC_tgc
"""

import numpy as np
import pandas as pd
import math
from sklearn import preprocessing,svm
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

df=pd.read_csv("GOOG.csv")

df

df=df[["adjClose","adjHigh","adjLow","adjOpen","adjVolume"]]

df

df["HCL_PCT"]=(df["adjHigh"]-df["adjClose"])/df["adjClose"]*100.0

df

df["PCT_change"]=(df["adjClose"]-df["adjOpen"])/df["adjOpen"]*100.0

df

df=df[["adjClose","HCL_PCT","PCT_change","adjVolume"]]

df

forecast_col="adjClose"

df.fillna(-99999,inplace=True)

forecast_out=int(math.ceil(0.01*len(df)))
df["label"]=df[forecast_col].shift(-forecast_out)

df.dropna(inplace=True)

X=np.array(df.drop(["label"],1))
Y=np.array(df["label"])
X=preprocessing.scale(X)
Y=np.array(df["label"])
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2)
clf=LinearRegression()
clf.fit(X_train,Y_train)
accuracy=clf.score(X_test,Y_test)
print(accuracy)

